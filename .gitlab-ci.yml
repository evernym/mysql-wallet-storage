stages:
  - dockerbuild
  - test
  - build
  - package
  - publish

variables:
  CARGO_FLAGS: "--release"
  RUST_VERSION: 1.43.0
  PACKAGE_VERSION: 0.1.13

# Helpers / Anchors
.docker_micro:
  tags:
    - docker-machine
    - large

.kaniko_build:
  tags:
    - docker-machine
    - micro
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - if [ "$CI_COMMIT_REF_SLUG" == 'master' ]; then KANIKO_ARGS="--destination $CI_REGISTRY_IMAGE/${DOCKER_IMAGE_NAME}:latest $KANIKO_ARGS"; fi
    - echo "${KANIKO_ARGS}"
    - |
        echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" \
        > /kaniko/.docker/config.json
    - |
        echo "-----BEGIN CERTIFICATE-----
        MIIFJTCCAw2gAwIBAgIUMI0Z8YSLeRq8pZks40O3Dq2m8TIwDQYJKoZIhvcNAQEL
        BQAwGjEYMBYGA1UEAxMPRXZlcm55bSBSb290IENBMB4XDTE3MTAxMTIwMTAxMFoX
        DTQ3MTAwNDIwMTAzOVowGjEYMBYGA1UEAxMPRXZlcm55bSBSb290IENBMIICIjAN
        BgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEA1kjmtmMfLJfsqUNaco44N3brW8Vu
        b02lAeEwbxc65mwfAG8kAjW7kYhI/fDXFOYXUvoa3Dg7bFeEatdIjHOahZssGM27
        HsQZ4PfRhPE6HtXFszmDwXWuEekVxoyueTqL7ExnNZ+BRTXvPfm5nw1E7L3o3xHF
        GSOtWFCyHfKd1LwMKzAVSjxlawEZnfk3WK3NxrC4UYMlQaDme7m3rCMfO+KBQk69
        bFXsgn6/EihVeQ8T1+T8gogofzh5b4Z7kS6e6GMqotbGFg4agejkRVsIglSpaQLk
        2Ztn/MP1dwgyvO4uvplB4sxZSC2FhhovlwPETmbKsnpj020+m0+YU4FPKwjroMiH
        tP//YqiNKsLxtjhffW7XFToyy0qQttW5RMWnyx4MXs9Hwcy29gY1izeGMSzz3zV5
        HG8JSJikuYbYiGJRVS0egovkVjja6lrVk0Q4Hm5pbw4l7LYCd6bkDLMsRaS1QnWs
        9iz6XEf5SpIu1FuqHmlhj1ABehUyGIg5oC6egML3q78yk0mCW523qMFa9Kjnk871
        mmXSCn3p/3DCrwWYfpcibxtVaKyJj6ISYIcl+Zu65Uzmhf+nj56x3gkNgEOva7JS
        Xge+FxPxsaXBGyeSH09nNIoNmh/UucuzpNY2UyCpJuqXHtR5jaACSdsqNxG8tcDg
        K9v98D/DFiShghECAwEAAaNjMGEwDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQF
        MAMBAf8wHQYDVR0OBBYEFOrH4oUpB94gNDNqdGG92kdVZ3qkMB8GA1UdIwQYMBaA
        FOrH4oUpB94gNDNqdGG92kdVZ3qkMA0GCSqGSIb3DQEBCwUAA4ICAQCwjN3ggZ98
        BXT39fKkCX3FHb0++aFcIyMKWrcZIpYrl3GoZsNKZK4QNQ+uJOP8xmqgyrCoMfch
        VIGPQ0RDN/IzqCLhc/U3pDmk2hXa3xTxD3gpCQZ6Bz04KlcLfZd5jzbI741bVDyF
        a1n46bEyuqV4SsNJWI/FGokJCNcZH66njBQBaQAccZ7xB9vWU9yjIYtGQDDvSm6J
        SC2knrQri0vv4QLUSc1LS6AlWWSQxcCpcdO+OzIFGsf5bVmYN6J4R3COY5NyQ+yn
        pOSN2NOh5h3ZrYAxm3i4Il0orVLveVcTVDGeAgZUII4YLJi/01RHGqit3aCuApSh
        bzFTZ5FldFss+JX9iAhqpFDbHLgae0F3QmYEnGilt/PzO4j23QJo3FZKeruQLH7P
        L9aOgN6S2+Akbbm9YTc59yzU5TZMxANwTdaYFWFqk/8nKgZiBR1l8jnWTlWnm86A
        qVssH3DLKwiYrWSOHRzGuN5BmPXxxtKQJlwAXt0wJE3puUkaJSRo7CJQ3QNMoKDe
        OjzXc9WvkFIXr3Eui8UTiHB/WT7N4o8hmVN404akGfWE0YNwRVfWpjGdew6g0tZi
        lFnjUUk49av67um43JHcinT5NFPuleZzkjaL/D8ueOrjXQDy05rwVdgmw9pXog4B
        Tw6APXtEnjfD2H8HOpOX/7ef4gWK0O1Q7A==
        -----END CERTIFICATE-----" >> /kaniko/ssl/certs/ca-certificates.crt
    - |
        /kaniko/executor ${KANIKO_ARGS} --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/${DOCKERFILE_PATH} \
        --destination $CI_REGISTRY_IMAGE/${DOCKER_IMAGE_NAME}:${CI_COMMIT_REF_SLUG}

# Jobs
mysql-wallet-storage-buildtools:
  extends: .kaniko_build
  stage: dockerbuild
  variables:
    DOCKERFILE_PATH: mysql-wallet-storage-buildtools.dockerfile
    DOCKER_IMAGE_NAME: mysql-wallet-storage-buildtools
    KANIKO_ARGS: "--build-arg RUST_VERSION=${RUST_VERSION}"
  only:
    refs:
      - master
      - /^docker-.*/
    changes:
      - .gitlab-ci.yml
      - mysql-wallet-storage-buildtools.dockerfile

#dry-mode: compile but don't actually run tests.
.test-dry:
  extends: .docker_micro
  stage: test
  script:
    - cargo --version
    - rustc --version
    - cd libmysqlstorage
    - cargo clean
    - RUST_BACKTRACE=1 cargo test ${CARGO_FLAGS} --no-run

test-dry-from-latest:
  extends: .test-dry
  image: ${CI_REGISTRY_IMAGE}/mysql-wallet-storage-buildtools:latest
  except:
    refs:
      - /^docker-.*/

test-dry-from-branch:
  extends: .test-dry
  image: ${CI_REGISTRY_IMAGE}/mysql-wallet-storage-buildtools:${CI_COMMIT_REF_SLUG}
  only:
    refs:
      - /^docker-.*/

#compile and run tests
.test:
  extends: .docker_micro
  stage: test
  variables:
    MYSQL_DATABASE: "wallet"
    MYSQL_ROOT_PASSWORD: "root"
    DB_NAME: "wallet"
    DB_READ_HOST: "mysql"
    DB_WRITE_HOST: "mysql"
    DB_USER: "root"
    DB_PASS: "root"
    DB_PORT: "3306"
  script:
    - cargo --version
    - rustc --version
    - mysql -h ${DB_READ_HOST} -u ${DB_USER} -p${DB_PASS} < db_scripts/schema/change_scripts/wallet_schema_creation.2018-05-07.sql
    - echo "show tables;" | mysql -h ${DB_READ_HOST} -u ${DB_USER} -p${DB_PASS} wallet
    - echo "create user 'test' identified with mysql_native_password by 'test' require none" | mysql -h ${DB_READ_HOST} -u ${DB_USER} -p${DB_PASS}
    - echo "grant all on wallet.* to 'test'" | mysql -h ${DB_READ_HOST} -u ${DB_USER} -p${DB_PASS}
    - cd libmysqlstorage
    - cargo clean
    - DB_USER=test DB_PASS=test RUST_TEST_THREADS=1 RUST_BACKTRACE=1 RUST_LOG=trace cargo test ${CARGO_FLAGS}

.test-mysql-5.7:
  extends: .test
  services:
    - name: mysql:5
      alias: mysql

test-mysql-5.7-from-latest:
  extends: .test-mysql-5.7
  image: ${CI_REGISTRY_IMAGE}/mysql-wallet-storage-buildtools:latest
  except:
    refs:
      - /^docker-.*/

test-mysql-5.7-from-branch:
  extends: .test-mysql-5.7
  image: ${CI_REGISTRY_IMAGE}/mysql-wallet-storage-buildtools:${CI_COMMIT_REF_SLUG}
  only:
    refs:
      - /^docker-.*/

.test-mysql-8:
  extends: .test
  services:
    - name: mysql:8

test-mysql-8-from-latest:
  extends: .test-mysql-8
  image: ${CI_REGISTRY_IMAGE}/mysql-wallet-storage-buildtools:latest
  except:
    refs:
      - /^docker-.*/

test-mysql-8-from-branch:
  extends: .test-mysql-8
  image: ${CI_REGISTRY_IMAGE}/mysql-wallet-storage-buildtools:${CI_COMMIT_REF_SLUG}
  only:
    refs:
      - /^docker-.*/

.build-and-package:
  extends: .docker_micro
  stage: package
  artifacts:
    paths:
      - libmysqlstorage/target
  script:
    - cd libmysqlstorage
    - cargo install cargo-deb
    - cargo deb
    - cd target/debian
    - echo ${CI_COMMIT_REF_SLUG}
    - ./../../../devops/finalize_package.sh ${PACKAGE_VERSION} ${CI_PIPELINE_IID} ${CI_COMMIT_REF_SLUG}

build-and-package-from-latest:
  extends: .build-and-package
  image: ${CI_REGISTRY_IMAGE}/mysql-wallet-storage-buildtools:latest
  except:
    refs:
      - /^docker-.*/

build-and-package-from-branch:
  extends: .build-and-package
  image: ${CI_REGISTRY_IMAGE}/mysql-wallet-storage-buildtools:${CI_COMMIT_REF_SLUG}
  only:
    refs:
      - /^docker-.*/

publish:
  image: ${CI_REGISTRY_IMAGE}/mysql-wallet-storage-buildtools:latest
  only:
    refs:
      - master@dev/mysql-wallet-storage
      - stable@dev/mysql-wallet-storage
  extends: .docker_micro
  stage: publish
  artifacts:
    paths:
      - libmysqlstorage/target
  script:
    - devops/publish.sh "${KRK_USERNAME}:${KRK_PASSWORD}" libmysqlstorage*.deb https://kraken.corp.evernym.com/repo/portal_dev/upload
    - devops/publish.sh "${KRK_USERNAME}:${KRK_PASSWORD}" libmysqlstorage*.deb https://kraken.corp.evernym.com/repo/agency_dev/upload
